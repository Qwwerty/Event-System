/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import CONTROLLER.ControllerEvents;
import UTIL.Utils;
import javax.swing.JOptionPane;

/**
 *
 * @author qwerty
 */
public class Events extends javax.swing.JFrame {

    /**
     * Creates new form Events
     */
    String[][] dados;
    
    public Events() {
        initComponents();
    }
    
    public Events(String[][] daodos) {
        initComponents();
        this.dados = dados;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtNameEvents = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtDescriptionEvents = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtCapacityEvents = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtRealizationAdressEvents = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtTimeStartEvents = new javax.swing.JFormattedTextField();
        jtTimeFinishEvents = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jbSaveEvents = new javax.swing.JButton();
        jbCreateEvents = new javax.swing.JButton();
        jbDeleteEvents = new javax.swing.JButton();
        jbCancelEvents = new javax.swing.JButton();
        jtIdEvents = new javax.swing.JTextField();
        jbSearchEvents = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        jButton5.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Events");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        jLabel1.setText("Name");

        jtNameEvents.setFont(new java.awt.Font("DialogInput", 1, 13)); // NOI18N

        jLabel2.setText("Description");

        jtDescriptionEvents.setFont(new java.awt.Font("DialogInput", 1, 13)); // NOI18N

        jLabel3.setText("Capacity");

        jtCapacityEvents.setFont(new java.awt.Font("DialogInput", 1, 13)); // NOI18N
        jtCapacityEvents.setText("10");

        jLabel4.setText("Realization Adress");

        jtRealizationAdressEvents.setFont(new java.awt.Font("DialogInput", 1, 13)); // NOI18N

        jLabel5.setText("Time Start");

        try {
            jtTimeStartEvents.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/#### ##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtTimeStartEvents.setFont(new java.awt.Font("DialogInput", 1, 13)); // NOI18N

        try {
            jtTimeFinishEvents.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/#### ##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtTimeFinishEvents.setFont(new java.awt.Font("DialogInput", 1, 13)); // NOI18N

        jLabel7.setText("Time Finish");

        jbSaveEvents.setBackground(new java.awt.Color(238, 203, 63));
        jbSaveEvents.setFont(new java.awt.Font("DialogInput", 1, 13)); // NOI18N
        jbSaveEvents.setText("Save");
        jbSaveEvents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSaveEventsActionPerformed(evt);
            }
        });

        jbCreateEvents.setBackground(new java.awt.Color(238, 203, 63));
        jbCreateEvents.setFont(new java.awt.Font("DialogInput", 1, 13)); // NOI18N
        jbCreateEvents.setText("Create");
        jbCreateEvents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCreateEventsActionPerformed(evt);
            }
        });

        jbDeleteEvents.setBackground(new java.awt.Color(238, 203, 63));
        jbDeleteEvents.setFont(new java.awt.Font("DialogInput", 1, 13)); // NOI18N
        jbDeleteEvents.setText("Delete");
        jbDeleteEvents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteEventsActionPerformed(evt);
            }
        });

        jbCancelEvents.setBackground(new java.awt.Color(238, 203, 63));
        jbCancelEvents.setFont(new java.awt.Font("DialogInput", 1, 13)); // NOI18N
        jbCancelEvents.setText("Cancel");
        jbCancelEvents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelEventsActionPerformed(evt);
            }
        });

        jtIdEvents.setFont(new java.awt.Font("DialogInput", 1, 13)); // NOI18N
        jtIdEvents.setText("0");
        jtIdEvents.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtIdEventsFocusLost(evt);
            }
        });

        jbSearchEvents.setText("...");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtIdEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbSearchEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jtNameEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jtDescriptionEvents, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addComponent(jLabel7))
                                        .addComponent(jtRealizationAdressEvents, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel5))
                                            .addGap(0, 0, Short.MAX_VALUE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jtCapacityEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jtTimeStartEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jtTimeFinishEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addComponent(jbCreateEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jbSaveEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jbDeleteEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jbCancelEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtIdEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSearchEvents))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtNameEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtDescriptionEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtRealizationAdressEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtCapacityEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtTimeStartEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtTimeFinishEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSaveEvents)
                    .addComponent(jbCreateEvents)
                    .addComponent(jbDeleteEvents)
                    .addComponent(jbCancelEvents))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtIdEventsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtIdEventsFocusLost
        this.actionSearch();
        try {
            if (Integer.parseInt(jtIdEvents.getText()) != 0) {
                ControllerEvents controller = new ControllerEvents();
                String JSON = controller.recuperar(Integer.parseInt(jtIdEvents.getText()));
                System.out.println(JSON);
                String[][] dados = Utils.JsonToVector(JSON, "event");

                if (dados != null) {
                    System.out.println(dados[0][6]);
                    jtIdEvents.setText(dados[0][6]);
                    jtNameEvents.setText(dados[0][0]);
                    jtCapacityEvents.setText(dados[0][2]);
                    jtDescriptionEvents.setText(dados[0][1]);
                    jtTimeFinishEvents.setText(dados[0][5]);
                    jtTimeStartEvents.setText(dados[0][4]);
                    jtRealizationAdressEvents.setText(dados[0][3]);
                } else {
                    JOptionPane.showMessageDialog(null, "An unexpected error happened, try again.", "Error", JOptionPane.ERROR_MESSAGE);
                    this.actionCancel();
                }
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Event not found.");
            this.actionCancel();
        }

    }//GEN-LAST:event_jtIdEventsFocusLost

    private void jbCancelEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelEventsActionPerformed
        this.actionCancel();
    }//GEN-LAST:event_jbCancelEventsActionPerformed

    private void jbSaveEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveEventsActionPerformed
        ControllerEvents controller = new ControllerEvents();
        String[][] dados = new String[7][2];

        dados[0][0] = "id";
        dados[0][1] = jtIdEvents.getText();

        dados[1][0] = "name";
        dados[1][1] = jtNameEvents.getText();

        dados[2][0] = "description";
        dados[2][1] = jtDescriptionEvents.getText();

        dados[3][0] = "capacity";
        dados[3][1] = jtCapacityEvents.getText();

        dados[4][0] = "realizationAdress";
        dados[4][1] = jtRealizationAdressEvents.getText();

        dados[5][0] = "timeStart";
        dados[5][1] = jtTimeStartEvents.getText()
                .replace("/", "")
                .replace(":", "").trim();

        dados[6][0] = "timeFinish";
        dados[6][1] = jtTimeFinishEvents.getText()
                .replace("/", "")
                .replace(":", "").trim();

        try {
            if (Integer.parseInt(jtIdEvents.getText()) == 0) {
                String JSON = Utils.stringToJson(dados);

                if (this.validInformations()) {
                    if (controller.inserirGenerico(JSON)) {
                        JOptionPane.showMessageDialog(null, "Successfully inserted.", "Info", JOptionPane.INFORMATION_MESSAGE);
                        this.actionCancel();
                    } else {
                        JOptionPane.showMessageDialog(null, "Not inserted.", "Info", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Check the complete information. Try again.", "Information", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                if (this.validInformations()) {
                    String JSON = Utils.stringToJson(dados);
                    if (controller.atualizar(JSON)) {
                        this.validInformations();
                        JOptionPane.showMessageDialog(null, "Successfully updated.", "Information", JOptionPane.INFORMATION_MESSAGE);
                        this.actionCancel();
                    } else {
                        JOptionPane.showMessageDialog(null, "Check the complete information. Try again.", "Information", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Check the complete information. Try again.", "Information", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "An unexpected error happened, try again.", "Error", JOptionPane.ERROR_MESSAGE);
            this.actionCancel();
        }
    }//GEN-LAST:event_jbSaveEventsActionPerformed

    private void jbCreateEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCreateEventsActionPerformed
        this.actionSearch();
        this.clean();
    }//GEN-LAST:event_jbCreateEventsActionPerformed

    private void jbDeleteEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteEventsActionPerformed
        ControllerEvents controller = new ControllerEvents();

        try {
            controller.deletar(Integer.parseInt(jtIdEvents.getText()));
            JOptionPane.showMessageDialog(null, "Successfully deleted.");
            this.actionCancel();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "An unexpected error happened, try again.", "Error", JOptionPane.ERROR_MESSAGE);
            this.actionCancel();
        }
    }//GEN-LAST:event_jbDeleteEventsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Events.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Events.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Events.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Events.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Events().setVisible(true);
            }
        });
    }

    private void actionSearch() {
        jbCreateEvents.setEnabled(false);
        jtIdEvents.setEnabled(false);
        jbSearchEvents.setEnabled(false);
    }

    private void actionCancel() {
        jbCreateEvents.setEnabled(true);
        jtIdEvents.setEnabled(true);
        jbSearchEvents.setEnabled(true);
        this.clean();
    }

    public void clean() {
        jtIdEvents.setText("0");
        jtNameEvents.setText("");
        jtCapacityEvents.setText("10");
        jtDescriptionEvents.setText("");
        jtTimeFinishEvents.setText("");
        jtTimeStartEvents.setText("");
        jtRealizationAdressEvents.setText("");
    }

    public Boolean validInformations() {

        String timeStart = jtTimeStartEvents.getText()
                .replace("/", "")
                .replace(":", "").trim();

        String timeFinish = jtTimeFinishEvents.getText()
                .replace("/", "")
                .replace(":", "").trim();

        if (!timeFinish.isEmpty() && !timeStart.isEmpty()
                && !jtNameEvents.getText().isEmpty()
                && !jtRealizationAdressEvents.getText().isEmpty()) {
            return true;
        }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbCancelEvents;
    private javax.swing.JButton jbCreateEvents;
    private javax.swing.JButton jbDeleteEvents;
    private javax.swing.JButton jbSaveEvents;
    private javax.swing.JButton jbSearchEvents;
    private javax.swing.JTextField jtCapacityEvents;
    private javax.swing.JTextField jtDescriptionEvents;
    private javax.swing.JTextField jtIdEvents;
    private javax.swing.JTextField jtNameEvents;
    private javax.swing.JTextField jtRealizationAdressEvents;
    private javax.swing.JFormattedTextField jtTimeFinishEvents;
    private javax.swing.JFormattedTextField jtTimeStartEvents;
    // End of variables declaration//GEN-END:variables
}
