/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import CONTROLLER.ControllerEvents;
import CONTROLLER.ControllerPeoples;
import CONTROLLER.ControllerUser;
import UTIL.Utils;
import com.google.gson.Gson;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author qwerty
 */
public class ImportExport extends javax.swing.JFrame {

    /**
     * Creates new form ImportExport
     */
    public ImportExport() {
        initComponents();

        if (jcAction.getSelectedIndex() == 0) {
            jbClean.setEnabled(true);
        } else {
            jbClean.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcAction = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jcTable = new javax.swing.JComboBox<>();
        jbClean = new javax.swing.JButton();
        jbStart = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTextJson = new javax.swing.JTextArea();
        jbOpenFIle1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Import and Export Json");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        jLabel1.setBackground(new java.awt.Color(254, 254, 254));
        jLabel1.setText("Action");

        jcAction.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Import", "Export" }));
        jcAction.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcActionItemStateChanged(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(254, 254, 254));
        jLabel2.setText("Table");

        jcTable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "User", "People", "Event" }));

        jbClean.setBackground(new java.awt.Color(23, 23, 23));
        jbClean.setForeground(new java.awt.Color(238, 203, 63));
        jbClean.setText("CLEAN");
        jbClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCleanActionPerformed(evt);
            }
        });

        jbStart.setBackground(new java.awt.Color(23, 23, 23));
        jbStart.setForeground(new java.awt.Color(238, 203, 63));
        jbStart.setText("START");
        jbStart.setToolTipText("teste");
        jbStart.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jbStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbStartActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 0, 0));
        jLabel3.setFont(new java.awt.Font("Noto Sans", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Warning");

        jtTextJson.setColumns(20);
        jtTextJson.setRows(5);
        jtTextJson.setEnabled(false);
        jScrollPane1.setViewportView(jtTextJson);

        jbOpenFIle1.setBackground(new java.awt.Color(23, 23, 23));
        jbOpenFIle1.setForeground(new java.awt.Color(238, 203, 63));
        jbOpenFIle1.setText("OPEN FILE");
        jbOpenFIle1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOpenFIle1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(jcAction, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcTable, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbClean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbStart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jbOpenFIle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcAction, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcTable, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbClean, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbOpenFIle1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbStart, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jcActionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcActionItemStateChanged
        if (jcAction.getSelectedIndex() == 0) {
            jbClean.setEnabled(true);
        } else {
            jbClean.setEnabled(false);
        }
    }//GEN-LAST:event_jcActionItemStateChanged

    File ff;
    private void jbCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCleanActionPerformed
        jtTextJson.setText("");
    }//GEN-LAST:event_jbCleanActionPerformed

    private void jbOpenFIle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOpenFIle1ActionPerformed
        JFileChooser jfc = new JFileChooser();
        int aa = jfc.showOpenDialog(this);

        try {
            if (aa == JFileChooser.APPROVE_OPTION) {

                char cbuff[] = null;
                ff = jfc.getSelectedFile();
                String path = ff.getAbsolutePath();

                FileReader fileReader = new FileReader(ff);
                jtTextJson.read(fileReader, "");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jbOpenFIle1ActionPerformed

    private void jbStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbStartActionPerformed
        if (jcAction.getSelectedIndex() == 0) {
            if (jcTable.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "The import needs to be done individually for each table, choose again.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (jtTextJson.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Check the import and try again.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
                    Utils.Import(jtTextJson.getText(), jcTable.getSelectedIndex());
                    JOptionPane.showMessageDialog(null, "Successfully imported.", "Info", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "An unexpected error occurred, check the imported file and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            ControllerUser controllerUser = new ControllerUser();
            ControllerEvents controllerEvents = new ControllerEvents();
            ControllerPeoples controllerPeople = new ControllerPeoples();
            
            //Import All
            if (jcTable.getSelectedIndex() == 0) {
                try {
                    if (controllerUser.Export()) {
                        JOptionPane.showMessageDialog(null, "Successfully imported User.", "Info", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "An unexpected error occurred, check the imported file User and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                    }

                    if (controllerEvents.Export()) {
                        JOptionPane.showMessageDialog(null, "Successfully imported Event.", "Info", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "An unexpected error occurred, check the imported file Event and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                    }

                    if (controllerPeople.Export()) {
                        JOptionPane.showMessageDialog(null, "Successfully imported People.", "Info", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "An unexpected error occurred, check the imported file Event and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                    }

                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "An unexpected error occurred, check the imported file and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } 
            //Export User
            else if (jcTable.getSelectedIndex() == 1) {
                try {
                    if (controllerUser.Export()) {
                        JOptionPane.showMessageDialog(null, "Successfully imported User.", "Info", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "An unexpected error occurred, check the imported file User and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "An unexpected error occurred, check the imported file and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } 
            //Export People
            else if (jcTable.getSelectedIndex() == 2) {
                try {
                    if (controllerPeople.Export()) {
                        JOptionPane.showMessageDialog(null, "Successfully imported People.", "Info", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "An unexpected error occurred, check the imported file People and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "An unexpected error occurred, check the imported file and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            //Export Event
            else if (jcTable.getSelectedIndex() == 3) {
                try {
                    if (controllerEvents.Export()) {
                        JOptionPane.showMessageDialog(null, "Successfully imported Event.", "Info", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "An unexpected error occurred, check the imported file Event and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "An unexpected error occurred, check the imported file and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jbStartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImportExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImportExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImportExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImportExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImportExport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbClean;
    private javax.swing.JButton jbOpenFIle1;
    private javax.swing.JButton jbStart;
    private javax.swing.JComboBox<String> jcAction;
    private javax.swing.JComboBox<String> jcTable;
    private javax.swing.JTextArea jtTextJson;
    // End of variables declaration//GEN-END:variables
}
